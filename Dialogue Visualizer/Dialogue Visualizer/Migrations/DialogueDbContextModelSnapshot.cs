// <auto-generated />
using System;
using Dialogue_Visualizer.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dialogue_Visualizer.Migrations
{
    [DbContext(typeof(DialogueDbContext))]
    partial class DialogueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("Dialogue_Visualizer.Models.Dialogue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DialogueId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsQuestion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Speaker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DialogueId");

                    b.ToTable("Dialogue");
                });

            modelBuilder.Entity("Dialogue_Visualizer.Models.DialogueBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DialogueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SceneId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DialogueId");

                    b.HasIndex("SceneId");

                    b.ToTable("DialogueBlocks");
                });

            modelBuilder.Entity("Dialogue_Visualizer.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Dialogue_Visualizer.Models.Scene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Scene");
                });

            modelBuilder.Entity("Dialogue_Visualizer.Models.Dialogue", b =>
                {
                    b.HasOne("Dialogue_Visualizer.Models.Dialogue", null)
                        .WithMany("FollowUpDialogue")
                        .HasForeignKey("DialogueId");
                });

            modelBuilder.Entity("Dialogue_Visualizer.Models.DialogueBlock", b =>
                {
                    b.HasOne("Dialogue_Visualizer.Models.Dialogue", "Dialogue")
                        .WithMany()
                        .HasForeignKey("DialogueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dialogue_Visualizer.Models.Scene", null)
                        .WithMany("DialogueBlocks")
                        .HasForeignKey("SceneId");

                    b.Navigation("Dialogue");
                });

            modelBuilder.Entity("Dialogue_Visualizer.Models.Scene", b =>
                {
                    b.HasOne("Dialogue_Visualizer.Models.Project", null)
                        .WithMany("Scenes")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Dialogue_Visualizer.Models.Dialogue", b =>
                {
                    b.Navigation("FollowUpDialogue");
                });

            modelBuilder.Entity("Dialogue_Visualizer.Models.Project", b =>
                {
                    b.Navigation("Scenes");
                });

            modelBuilder.Entity("Dialogue_Visualizer.Models.Scene", b =>
                {
                    b.Navigation("DialogueBlocks");
                });
#pragma warning restore 612, 618
        }
    }
}
